{"version":3,"sources":["index.js"],"names":["App","props","state","tasks","navbar","addTask","input","completeTasks","handleNavBut","bind","handleAddBut","handleOnChange","handleCompleteBut","handleRestoreBut","id","event","this","setState","map","navbut","active","task","filter","item","push","length","slice","pop","target","value","tabActive","cardDate","handleTaskBut","buttonText","about","Header","onClick","MainSrc","TaskForm","onChange","AddTaskBut","React","Component","className","alt","src","height","nav","NavBut","key","imgSrc","replace","tasksToRender","index","TaskCard","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.384a2605.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './main.css';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {            \r\n            tasks: props.tasks,\r\n            navbar: props.navbar,\r\n            addTask: false,\r\n            input: '',\r\n            completeTasks: [],            \r\n        }\r\n        this.handleNavBut = this.handleNavBut.bind(this);\r\n        this.handleAddBut = this.handleAddBut.bind(this);\r\n        this.handleOnChange = this.handleOnChange.bind(this);\r\n        this.handleCompleteBut = this.handleCompleteBut.bind(this);\r\n        this.handleRestoreBut = this.handleRestoreBut.bind(this);        \r\n    }\r\n\r\n    handleNavBut(id, event) {\r\n        this.setState((state) => {\r\n            let navbar = state.navbar;                \r\n            navbar.map(navbut => {                    \r\n                return navbut.active = navbut.id === id ? true : false; \r\n            })\r\n            return {navbar: navbar};\r\n        })        \r\n    }\r\n\r\n    handleCompleteBut(task, event) {        \r\n        this.setState((state) => {\r\n            let tasks = state.tasks;\r\n            tasks = tasks.filter(item => item !== task);            \r\n            let completeTasks = state.completeTasks;            \r\n            completeTasks.push(task);\r\n            if(completeTasks.length > 10) {\r\n                completeTasks = completeTasks.slice(1,);\r\n            }           \r\n            return {tasks: tasks, completeTasks: completeTasks};\r\n        })        \r\n    }\r\n\r\n    handleRestoreBut(task, event) {        \r\n        this.setState((state) => {\r\n            let tasks = state.tasks;\r\n            //tasks = tasks.filter(item => item !== task);            \r\n            let completeTasks = state.completeTasks;            \r\n            tasks.push(completeTasks.pop());            \r\n            return {tasks: tasks, completeTasks: completeTasks};\r\n        })        \r\n    }\r\n\r\n    handleOnChange(event) {\r\n        this.setState({input: event.target.value});\r\n    }\r\n\r\n    handleAddBut(event) {\r\n        if(this.state.addTask === false) {\r\n            this.setState({addTask: true})\r\n        } else {\r\n            this.setState((state) => {\r\n                let tasks = state.tasks;\r\n                if(state.input) {\r\n                    tasks.push(state.input);\r\n                }                               \r\n                return {addTask: false, tasks: tasks, input: ''}\r\n            })\r\n        }               \r\n    }   \r\n\r\n    render() {\r\n        const tabActive = this.state.navbar.filter(navbut => navbut.active)[0].id;\r\n        let cardDate = {tasks: null, handleTaskBut: null, buttonText: null};        \r\n        switch(tabActive) {\r\n            case 'TASKS':\r\n                cardDate = {tasks: this.state.tasks, handleTaskBut: this.handleCompleteBut, buttonText: 'COMPLETE'};\r\n                break;\r\n            case 'COMPLETED':\r\n                cardDate = {tasks: this.state.completeTasks, handleTaskBut: this.handleRestoreBut, buttonText: 'RESTORE'};\r\n                break;\r\n            case 'ABOUT':\r\n                cardDate = {tasks: this.props.about, handleTaskBut: null, buttonText: '', about: true};\r\n                break;\r\n            default:\r\n                cardDate = {tasks: this.state.tasks, handleTaskBut: this.handleCompleteBut, buttonText: 'COMPLETE'};            \r\n    }\r\n\r\n        return (\r\n            <>\r\n                <Header navbar = {this.state.navbar} onClick = {this.handleNavBut}/>\r\n                <MainSrc tasks = {cardDate.tasks} handleTaskBut = {cardDate.handleTaskBut} buttonText = {cardDate.buttonText} about = {cardDate.about ? cardDate.about: null}/>\r\n                {this.state.addTask ? <TaskForm onChange = {this.handleOnChange} value = {this.state.input}/> : null}\r\n                {tabActive === 'TASKS' ? <AddTaskBut onClick = {this.handleAddBut}/> : null}\r\n            </>\r\n        )\r\n    }    \r\n}\r\n\r\nfunction Header(props) {    \r\n    return (\r\n        <header>\r\n            <div className = \"header\">\r\n                <img className = \"logo\" alt = '' src = \"./public/Logo.svg\" height=\"70px\" />\r\n            </div>\r\n            <div className = \"navbar\">                \r\n                {props.navbar.map(nav => <NavBut key = {nav.id} task = {nav} onClick = {props.onClick}/>)}\r\n            </div>      \r\n        </header>\r\n    )\r\n}\r\n\r\nfunction NavBut(props) {    \r\n    let className = props.task.active === true ? \"navBut _active\" : \"navBut\";\r\n    let imgSrc = props.task.imgSrc;\r\n    if (props.task.active === true) {\r\n        imgSrc = imgSrc.replace('.svg', '_active.svg');        \r\n    }\r\n    return (\r\n        <div className = {className} id = {props.task.id} onClick = {props.onClick.bind(this, props.task.id)}>\r\n            <img className = \"navIcon\" alt=\"\" src = {imgSrc} height=\"30px\" />\r\n            <span className = 'navText'>{props.task.id}</span> \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction MainSrc(props) {       \r\n    const tasksToRender = props.tasks.map((task, index) =>\r\n        <TaskCard key = {task+index} task = {task} handleTaskBut = {props.handleTaskBut} buttonText = {props.buttonText} about = {props.about}/>\r\n    );      \r\n    return (\r\n        <div>                          \r\n            {tasksToRender}\r\n        </div>            \r\n    )    \r\n}\r\n\r\nfunction TaskCard(props) {\r\n    return (\r\n        <div className = 'taskCard'>           \r\n            <div className = \"taskText\">{props.task}</div>            \r\n            {!props.about ? <button onClick = {props.handleTaskBut.bind(this, props.task)}>{props.buttonText}</button> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction AddTaskBut(props) {\r\n    return (\r\n        <div className = 'addTaskBut' onClick = {props.onClick}>\r\n            ADD TASK\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TaskForm(props) {\r\n    return (\r\n        <form>\r\n            <textarea onChange = {props.onChange} value={props.value} />\r\n        </form>\r\n    )\r\n}\r\n\r\nconst tasks = [\r\n    \"First Task\",\r\n    \"Second Task\",\r\n    \"Third Task\"\r\n]\r\n\r\nconst navbar = [\r\n    {id: 'TASKS', imgSrc: './public/icon_list.svg', active: true},\r\n    {id: 'COMPLETED', imgSrc: './public/icon_completed.svg', active: false},\r\n    {id: 'ABOUT', imgSrc: './public/icon_about.svg', active: false},\r\n]\r\n\r\nconst about = [\"This apllication created with the tool 'create-react-app'.\",  \"It's just a training project.\"];\r\n\r\nReactDOM.render(<App tasks = {tasks} navbar = {navbar} about = {about}/>, document.getElementById('root'));"],"sourceRoot":""}